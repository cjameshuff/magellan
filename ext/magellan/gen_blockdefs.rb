#!/usr/bin/env ruby

require "#{File.dirname($0)}/../../lib/magellan/mcdefs.rb"

generator_msg = '// This file automatically generated by gen_blockdefs.rb. Do not edit.'

# Generate header file
blockdefs_h = File.new("blockdefs.h", "w")

blockdefs_h.puts generator_msg
blockdefs_h.puts '#ifndef BLOCKDEFS_H'
blockdefs_h.puts '#define BLOCKDEFS_H'
blockdefs_h.puts ''
blockdefs_h.puts '#include <string>'
blockdefs_h.puts ''
blockdefs_h.puts 'struct BlockInfo {'
blockdefs_h.puts '    std::string name;'
blockdefs_h.puts '    uint8_t opacity;'
blockdefs_h.puts '};'
blockdefs_h.puts ''
blockdefs_h.puts 'extern BlockInfo blockdefs[];'
blockdefs_h.puts ''
blockdefs_h.puts 'enum {'
blockdefs_h.puts (0..255).map {|bid|
    block = Magellan::BLOCKS_BY_ID[bid]
    if(block)
        "    kBT_#{block[:name]} = #{bid}"
    else
        nil
    end
}.select{|x| x != nil}.push('    kNumBlockTypes').join(",\n")
blockdefs_h.puts '};'
blockdefs_h.puts ''
blockdefs_h.puts '#endif // BLOCKDEFS_H'
blockdefs_h.puts ''


# Generate source file
blockdefs_cpp = File.new("blockdefs.cpp", "w")

blockdefs_cpp.puts generator_msg
blockdefs_cpp.puts '#include "blockdefs.h"'
blockdefs_cpp.puts ''
blockdefs_cpp.puts 'BlockInfo blockdefs[256] = {'
blockdefs_cpp.puts (0..255).map {|bid|
    block = Magellan::BLOCKS_BY_ID[bid]
    if(block)
        "    {\"#{block[:name]}\", #{block[:opacity]}}"
    else
        "    {\"\", 15}"
    end
}.join(",\n")
blockdefs_cpp.puts '};'
blockdefs_cpp.puts ''
